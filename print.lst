


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000         
   18 00000000 0000000C 
                       Thous   EQU              12          ;
   19 00000000 00000008 
                       Hun     EQU              8           ;
   20 00000000 00000004 
                       Ten     EQU              4           ;
   21 00000000 00000000 
                       One     EQU              0           ;
   22 00000000         
   23 00000000         
   24 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   25 00000000                 THUMB
   26 00000000         
   27 00000000         
   28 00000000         
   29 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   30 00000000         ; Output a 32-bit number in unsigned decimal format
   31 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   32 00000000         ; Output: none
   33 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   34 00000000         LCD_OutDec
   35 00000000 E92D 0FF0       PUSH{R4-R11}                 ;
   36 00000004 4675            MOV              R5,LR       ; Original LR
   37 00000006 B084            SUB              SP,#16      ; Move stack pointe
                                                            r up
   38 00000008         
   39 00000008         ;Initialize variables to 0
   40 00000008 F04F 0100       MOV              R1,#0       ;
   41 0000000C 9100            STR              R1,[SP,#One] ;
   42 0000000E 9101            STR              R1,[SP,#Ten] ;
   43 00000010 9102            STR              R1,[SP,#Hun] ;
   44 00000012 9103            STR              R1,[SP,#Thous] ;
   45 00000014         
   46 00000014         
   47 00000014 F04F 0400       MOV              R4,#0       ;



ARM Macro Assembler    Page 2 


   48 00000018         LCD_OutDec1
   49 00000018 280A            CMP              R0,#10      ; no need to use mo
                                                            d if less than 10
   50 0000001A DB0D            BLT              PushN       ; signifies the bas
                                                            e case(recursion),s
                                                            kip to Pushn
   51 0000001C F04F 020A       MOV              R2,#10      ;
   52 00000020 FBB0 F3F2       UDIV             R3,R0,R2    ; Division
   53 00000024 FB03 F102       MUL              R1,R3,R2    ; Modulus
   54 00000028 EBA0 0101       SUB              R1,R0,R1    ; Modulus
   55 0000002C         
   56 0000002C F84D 1004       STR              R1,[SP,R4]  ; Push the current 
                                                            N, Offset is R4
   57 00000030 F104 0404       ADD              R4,#4       ;
   58 00000034 4618            MOV              R0,R3       ; Move back into in
                                                            put register
   59 00000036 E7EF            B                LCD_OutDec1 ;
   60 00000038         
   61 00000038         PushN
   62 00000038 F84D 0004       STR              R0,[SP,R4]  ; Store final digit
                                                            
   63 0000003C F04F 040C       MOV              R4,#12      ; Reset offset to T
                                                            housands location
   64 00000040         
   65 00000040         ChekDig
   66 00000040 F85D 0004       LDR              R0,[SP,R4]  ; Load current digi
                                                            t
   67 00000044         
   68 00000044         DispDig
   69 00000044 F100 0030       ADD              R0,#48      ; Convert to ascii
   70 00000048                 PRESERVE8        {TRUE}      ;
   71 00000048 F7FF FFFE       BL               ST7735_OutChar ; Display on LCD
                                                            
   72 0000004C F1A4 0404       SUB              R4,#4       ; Decrement offset 
                                                            (working downwards 
                                                            from Thousand -> On
                                                            e
   73 00000050 2C00            CMP              R4,#0       ; 
   74 00000052 DAF5            BGE              ChekDig     ; Including offset 
                                                            of 0 (ones digit)
   75 00000054         
   76 00000054         Lv1
   77 00000054 B004            ADD              SP,#16      ; Move back
   78 00000056 46AE            MOV              LR,R5       ;
   79 00000058 E8BD 0FF0       POP{R4-R11}                  ;
   80 0000005C 4770            BX               LR
   81 0000005E         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   82 0000005E         
   83 0000005E         ; -----------------------LCD _OutFix--------------------
                       --
   84 0000005E         ; Output characters to LCD display in fixed-point format
                       
   85 0000005E         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   86 0000005E         ; Inputs:  R0 is an unsigned 32-bit number
   87 0000005E         ; Outputs: none
   88 0000005E         ; E.g., R0=0,    then output "0.000 "
   89 0000005E         ;       R0=3,    then output "0.003 "
   90 0000005E         ;       R0=89,   then output "0.089 "



ARM Macro Assembler    Page 3 


   91 0000005E         ;       R0=123,  then output "0.123 "
   92 0000005E         ;       R0=9999, then output "9.999 "
   93 0000005E         ;       R0>9999, then output "*.*** "
   94 0000005E         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   95 0000005E         LCD_OutFix
   96 0000005E E92D 0FF0       PUSH{R4-R11}                 ;
   97 00000062 4675            MOV              R5,LR       ;
   98 00000064 B084            SUB              SP,#16      ; Pointing to Ones 
                                                            variable
   99 00000066         
  100 00000066         ;Initialize variables to 0
  101 00000066 F04F 0100       MOV              R1,#0       ;
  102 0000006A 9100            STR              R1,[SP,#One] ;
  103 0000006C 9101            STR              R1,[SP,#Ten] ;
  104 0000006E 9102            STR              R1,[SP,#Hun] ;
  105 00000070 9103            STR              R1,[SP,#Thous] ;
  106 00000072         
  107 00000072         
  108 00000072 F04F 0400       MOV              R4,#0       ;
  109 00000076         LCD_OutFix1
  110 00000076 280A            CMP              R0,#10      ; no need to use mo
                                                            d if less than 10
  111 00000078 DB0D            BLT              PushN1      ; signifies the bas
                                                            e case(recursion),s
                                                            kip to Pushn
  112 0000007A F04F 020A       MOV              R2,#10      ;
  113 0000007E FBB0 F3F2       UDIV             R3,R0,R2    ; Division
  114 00000082 FB03 F102       MUL              R1,R3,R2    ; Modulus
  115 00000086 EBA0 0101       SUB              R1,R0,R1    ; Modulus
  116 0000008A         
  117 0000008A F84D 1004       STR              R1,[SP,R4]  ; Push the current 
                                                            N, Offset is R4
  118 0000008E F104 0404       ADD              R4,#4       ;
  119 00000092 4618            MOV              R0,R3       ; Move back into in
                                                            put register
  120 00000094 E7EF            B                LCD_OutFix1 ;
  121 00000096         
  122 00000096         PushN1
  123 00000096 F84D 0004       STR              R0,[SP,R4]  ; Store final digit
                                                            
  124 0000009A         
  125 0000009A F04F 040C       MOV              R4,#12      ; Start with thousa
                                                            nds
  126 0000009E         
  127 0000009E F85D 0004       LDR              R0,[SP,R4]  ; Thousands
  128 000000A2 F100 0030       ADD              R0,#48      ;
  129 000000A6                 PRESERVE8        {TRUE}      ;
  130 000000A6 F7FF FFFE       BL               ST7735_OutChar ; Display on LCD
                                                            
  131 000000AA         
  132 000000AA F04F 002E       MOV              R0,#46      ; Point
  133 000000AE                 PRESERVE8        {TRUE}      ;
  134 000000AE F7FF FFFE       BL               ST7735_OutChar ; Display on LCD
                                                            
  135 000000B2 F1A4 0404       SUB              R4,#4       ;
  136 000000B6         
  137 000000B6         
  138 000000B6 F85D 0004       LDR              R0,[SP,R4]  ; Hundreds



ARM Macro Assembler    Page 4 


  139 000000BA F100 0030       ADD              R0,#48      ;
  140 000000BE                 PRESERVE8        {TRUE}      ;
  141 000000BE F7FF FFFE       BL               ST7735_OutChar ; Display on LCD
                                                            
  142 000000C2 F1A4 0404       SUB              R4,#4       ;
  143 000000C6         
  144 000000C6 F85D 0004       LDR              R0,[SP,R4]  ; Tens
  145 000000CA F100 0030       ADD              R0,#48      ;
  146 000000CE                 PRESERVE8        {TRUE}      ;
  147 000000CE F7FF FFFE       BL               ST7735_OutChar ; Display on LCD
                                                            
  148 000000D2 F1A4 0404       SUB              R4,#4       ;
  149 000000D6         
  150 000000D6 F85D 0004       LDR              R0,[SP,R4]  ; Ones
  151 000000DA F100 0030       ADD              R0,#48      ;
  152 000000DE                 PRESERVE8        {TRUE}      ;
  153 000000DE F7FF FFFE       BL               ST7735_OutChar ; Display on LCD
                                                            
  154 000000E2         
  155 000000E2         
  156 000000E2 B004            ADD              SP,#16      ;
  157 000000E4 46AE            MOV              LR,R5       ;
  158 000000E6 E8BD 0FF0       POP{R4-R11}                  ;
  159 000000EA 4770            BX               LR
  160 000000EC         
  161 000000EC                 ALIGN
  162 000000EC         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  163 000000EC         
  164 000000EC                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  165 000000EC                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --predefine="__EVAL SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 24 in file Print.s
   Uses
      None
Comment: .text unused
ChekDig 00000040

Symbol: ChekDig
   Definitions
      At line 65 in file Print.s
   Uses
      At line 74 in file Print.s
Comment: ChekDig used once
DispDig 00000044

Symbol: DispDig
   Definitions
      At line 68 in file Print.s
   Uses
      None
Comment: DispDig unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 34 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutDec1 00000018

Symbol: LCD_OutDec1
   Definitions
      At line 48 in file Print.s
   Uses
      At line 59 in file Print.s
Comment: LCD_OutDec1 used once
LCD_OutFix 0000005E

Symbol: LCD_OutFix
   Definitions
      At line 95 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
LCD_OutFix1 00000076

Symbol: LCD_OutFix1
   Definitions
      At line 109 in file Print.s
   Uses
      At line 120 in file Print.s
Comment: LCD_OutFix1 used once
Lv1 00000054

Symbol: Lv1



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 76 in file Print.s
   Uses
      None
Comment: Lv1 unused
PushN 00000038

Symbol: PushN
   Definitions
      At line 61 in file Print.s
   Uses
      At line 50 in file Print.s
Comment: PushN used once
PushN1 00000096

Symbol: PushN1
   Definitions
      At line 122 in file Print.s
   Uses
      At line 111 in file Print.s
Comment: PushN1 used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Hun 00000008

Symbol: Hun
   Definitions
      At line 19 in file Print.s
   Uses
      At line 43 in file Print.s
      At line 104 in file Print.s

One 00000000

Symbol: One
   Definitions
      At line 21 in file Print.s
   Uses
      At line 41 in file Print.s
      At line 102 in file Print.s

Ten 00000004

Symbol: Ten
   Definitions
      At line 20 in file Print.s
   Uses
      At line 42 in file Print.s
      At line 103 in file Print.s

Thous 0000000C

Symbol: Thous
   Definitions
      At line 18 in file Print.s
   Uses
      At line 44 in file Print.s
      At line 105 in file Print.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 71 in file Print.s
      At line 130 in file Print.s
      At line 134 in file Print.s
      At line 141 in file Print.s
      At line 147 in file Print.s
      At line 153 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
347 symbols in table
